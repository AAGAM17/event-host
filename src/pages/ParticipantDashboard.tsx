import React from "react";
import jsPDF from "jspdf";

const mockStats = {
  eventsParticipated: 5,
  projectsSubmitted: 3,
  awardsWon: 2,
  teamsJoined: 2,
};

const mockEvents = [
  { id: "1", title: "Hackathon 2024", status: "Ongoing", deadline: "2024-09-20" },
  { id: "2", title: "AI Challenge", status: "Upcoming", deadline: "2024-10-05" },
];

const mockTeams = [
  { id: "1", name: "Code Ninjas", members: 4 },
  { id: "2", name: "Bug Smashers", members: 3 },
];

const mockSubmissions = [
  { id: "1", project: "Smart Health App", status: "Submitted", date: "2024-09-18" },
  { id: "2", project: "Eco Tracker", status: "Draft", date: "2024-09-15" },
];

const mockAchievements = [
  { id: "1", title: "Winner - Hackathon 2023", date: "2023-11-10" },
  { id: "2", title: "Best UI - AI Challenge", date: "2023-10-05" },
];

const mockNotifications = [
  { id: "1", message: "Project submission deadline is approaching!", type: "warning" },
  { id: "2", message: "Your team 'Code Ninjas' has a new member.", type: "info" },
];

const mockCertificates = [
  { id: "1", event: "Hackathon 2024", type: "Participation", date: "2024-09-21", organizer: "Jane Doe" },
  { id: "2", event: "AI Challenge", type: "Winner", date: "2024-10-06", organizer: "Jane Doe" },
];

function generateCertificatePDF({ name, event, type, date, organizer }: { name: string; event: string; type: string; date: string; organizer: string }) {
  const doc = new jsPDF({ orientation: "landscape" });
  // Background gradient (simulate with rectangles)
  doc.setFillColor(230, 240, 255);
  doc.rect(0, 0, 297, 210, "F");
  doc.setFillColor(210, 225, 255);
  doc.rect(10, 10, 277, 190, "F");
  // Border
  doc.setDrawColor(41, 128, 185);
  doc.setLineWidth(2);
  doc.rect(10, 10, 277, 190);
  // Logo/Title
  doc.setFontSize(30);
  doc.setTextColor(41, 128, 185);
  doc.setFont("helvetica", "bold");
  doc.text("Hackweave", 148, 32, { align: "center" });
  // Certificate Title
  doc.setFontSize(26);
  doc.setTextColor(44, 62, 80);
  doc.setFont("times", "bold");
  doc.text(`Certificate of ${type}`, 148, 55, { align: "center" });
  // Body
  doc.setFontSize(16);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(44, 62, 80);
  doc.text(`This is to certify that`, 148, 75, { align: "center" });
  doc.setFontSize(22);
  doc.setFont("times", "bolditalic");
  doc.setTextColor(41, 128, 185);
  doc.text(name, 148, 92, { align: "center" });
  doc.setFontSize(16);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(44, 62, 80);
  doc.text(`has successfully participated in`, 148, 110, { align: "center" });
  doc.setFontSize(18);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(39, 174, 96);
  doc.text(event, 148, 125, { align: "center" });
  doc.setFontSize(14);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(44, 62, 80);
  doc.text(`Date: ${date}`, 148, 145, { align: "center" });
  // Signature area
  doc.setFontSize(12);
  doc.setTextColor(120, 120, 120);
  doc.text("Organizer:", 220, 170);
  doc.setFontSize(18);
  doc.setFont("times", "italic");
  doc.setTextColor(41, 128, 185);
  doc.text("/s/ " + organizer, 220, 180);
  // Decorative line for signature
  doc.setDrawColor(120, 120, 120);
  doc.setLineWidth(0.5);
  doc.line(200, 182, 270, 182);
  // Footer
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(120, 120, 120);
  doc.text("Generated by Hackweave", 148, 200, { align: "center" });
  doc.save(`${event}_${type}_Certificate.pdf`);
}

const ParticipantDashboard = () => {
  const username = localStorage.getItem("username") || "Participant";
  return (
    <div className="max-w-5xl mx-auto px-4 py-8 space-y-8">
      {/* Welcome */}
      <div>
        <h1 className="text-3xl font-bold mb-1">Welcome, {username}!</h1>
        <p className="text-gray-600">Hereâ€™s your hackathon overview and quick actions.</p>
      </div>

      {/* Stats */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="bg-blue-100 rounded p-4 text-center">
          <div className="text-2xl font-bold">{mockStats.eventsParticipated}</div>
          <div className="text-gray-700">Events</div>
        </div>
        <div className="bg-green-100 rounded p-4 text-center">
          <div className="text-2xl font-bold">{mockStats.projectsSubmitted}</div>
          <div className="text-gray-700">Projects</div>
        </div>
        <div className="bg-yellow-100 rounded p-4 text-center">
          <div className="text-2xl font-bold">{mockStats.awardsWon}</div>
          <div className="text-gray-700">Awards</div>
        </div>
        <div className="bg-purple-100 rounded p-4 text-center">
          <div className="text-2xl font-bold">{mockStats.teamsJoined}</div>
          <div className="text-gray-700">Teams</div>
        </div>
      </div>

      {/* Quick Links */}
      <div className="flex flex-wrap gap-4">
        <a href="/events" className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Browse Events</a>
        <a href="/team" className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">Manage Teams</a>
        <a href="/submission" className="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700">Submit Project</a>
      </div>

      {/* Notifications */}
      <div>
        <h2 className="text-xl font-semibold mb-2">Notifications</h2>
        <ul className="space-y-2">
          {mockNotifications.map(n => (
            <li key={n.id} className={`p-3 rounded ${n.type === "warning" ? "bg-yellow-50 border-l-4 border-yellow-400" : "bg-blue-50 border-l-4 border-blue-400"}`}>
              {n.message}
            </li>
          ))}
        </ul>
      </div>

      {/* Current/Upcoming Events */}
      <div>
        <h2 className="text-xl font-semibold mb-2">Your Events</h2>
        <div className="grid md:grid-cols-2 gap-4">
          {mockEvents.map(event => (
            <div key={event.id} className="border rounded p-4 bg-white">
              <div className="font-bold text-lg">{event.title}</div>
              <div className="text-sm text-gray-600">Status: {event.status}</div>
              <div className="text-sm text-gray-500">Deadline: {event.deadline}</div>
              <a href={`/events/${event.id}`} className="text-blue-600 hover:underline text-sm mt-2 inline-block">View Details</a>
            </div>
          ))}
        </div>
      </div>

      {/* Team Management */}
      <div>
        <h2 className="text-xl font-semibold mb-2">Your Teams</h2>
        <div className="grid md:grid-cols-2 gap-4">
          {mockTeams.map(team => (
            <div key={team.id} className="border rounded p-4 bg-white">
              <div className="font-bold">{team.name}</div>
              <div className="text-sm text-gray-600">Members: {team.members}</div>
              <a href="/team" className="text-green-600 hover:underline text-sm mt-2 inline-block">Manage Team</a>
            </div>
          ))}
        </div>
      </div>

      {/* Project Submissions */}
      <div>
        <h2 className="text-xl font-semibold mb-2">Project Submissions</h2>
        <div className="grid md:grid-cols-2 gap-4">
          {mockSubmissions.map(sub => (
            <div key={sub.id} className="border rounded p-4 bg-white">
              <div className="font-bold">{sub.project}</div>
              <div className="text-sm text-gray-600">Status: {sub.status}</div>
              <div className="text-sm text-gray-500">Last Updated: {sub.date}</div>
              <a href="/submission" className="text-purple-600 hover:underline text-sm mt-2 inline-block">Edit Submission</a>
            </div>
          ))}
        </div>
      </div>

      {/* Recent Achievements */}
      <div>
        <h2 className="text-xl font-semibold mb-2">Recent Achievements</h2>
        <ul className="space-y-2">
          {mockAchievements.map(a => (
            <li key={a.id} className="p-3 rounded bg-yellow-50 border-l-4 border-yellow-400">
              <span className="font-bold">{a.title}</span> <span className="text-gray-600">({a.date})</span>
            </li>
          ))}
        </ul>
      </div>

      {/* Certificates */}
      <div>
        <h2 className="text-xl font-semibold mb-4">Certificates</h2>
        <div className="grid md:grid-cols-2 gap-6">
          {mockCertificates.map(cert => (
            <div key={cert.id} className="border-2 border-blue-300 rounded-xl p-6 bg-gradient-to-br from-blue-50 to-purple-50 shadow-lg flex flex-col md:flex-row md:items-center md:justify-between">
              <div>
                <div className="font-bold text-lg text-blue-800">{cert.type} Certificate</div>
                <div className="text-sm text-gray-700">Event: <span className="font-semibold">{cert.event}</span></div>
                <div className="text-sm text-gray-500">Issued: {cert.date}</div>
                <div className="text-xs text-gray-400 mt-2 italic">Signed by: {cert.organizer}</div>
              </div>
              <button
                onClick={() => generateCertificatePDF({ name: username, event: cert.event, type: cert.type, date: cert.date, organizer: cert.organizer })}
                className="mt-4 md:mt-0 bg-blue-600 text-white px-6 py-2 rounded-lg shadow hover:bg-blue-700 transition-all text-center font-semibold"
              >
                Download PDF
              </button>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default ParticipantDashboard;
